" Dark powered mode of SpaceVim, generated by SpaceVim automatically.
let g:spacevim_enable_debug = 1
let g:spacevim_realtime_leader_guide = 1
call SpaceVim#layers#load('autocomplete')
call SpaceVim#layers#load('incsearch')
call SpaceVim#layers#load('lang#c')
call SpaceVim#layers#load('lang#elixir')
call SpaceVim#layers#load('lang#go')
call SpaceVim#layers#load('lang#haskell')
call SpaceVim#layers#load('lang#java')
call SpaceVim#layers#load('lang#javascript')
call SpaceVim#layers#load('lang#lua')
call SpaceVim#layers#load('lang#perl')
call SpaceVim#layers#load('lang#python')
call SpaceVim#layers#load('lang#rust')
call SpaceVim#layers#load('lang#swig')
call SpaceVim#layers#load('lang#tmux')
call SpaceVim#layers#load('lang#vim')
call SpaceVim#layers#load('lang#xml')
call SpaceVim#layers#load('lang#json')
call SpaceVim#layers#load('lang#json')
call SpaceVim#layers#load('lang#julia')
call SpaceVim#layers#load('lang#kotlin')
call SpaceVim#layers#load('lang#lisp')
call SpaceVim#layers#load('lang#crystal')
call SpaceVim#layers#load('lang#ocaml')
call SpaceVim#layers#load('lang#pony')
call SpaceVim#layers#load('lang#puppet')
call SpaceVim#layers#load('lang#sh')
call SpaceVim#layers#load('lang#ruby')
call SpaceVim#layers#load('lang#scala')
call SpaceVim#layers#load('lang#typescript')
call SpaceVim#layers#load('lang#operator')
call SpaceVim#layers#load('tmux')
call SpaceVim#layers#load('tags')
call SpaceVim#layers#load('shell')   
call SpaceVim#layers#load('tools#screensaver')
call SpaceVim#layers#load('chinese')
call SpaceVim#layers#load('debug')
call SpaceVim#layers#load('denite')
call SpaceVim#layers#load('exprfold')
call SpaceVim#layers#load('games')
call SpaceVim#layers#load('indentmove')
call SpaceVim#layers#load('vim')
let g:spacevim_enable_vimfiler_welcome = 1
let g:spacevim_enable_debug = 1
let g:deoplete#auto_complete_delay = 150
let g:spacevim_enable_tabline_filetype_icon = 1
let g:spacevim_enable_os_fileformat_icon = 1
let g:spacevim_buffer_index_type = 1
let g:neomake_vim_enabled_makers = []
if executable('vimlint')
    call add(g:neomake_vim_enabled_makers, 'vimlint') 
endif
if executable('vint')
    call add(g:neomake_vim_enabled_makers, 'vint') 
endif
if has('python3')
    let g:ctrlp_map = ''
    nnoremap <silent> <C-p> :Denite file_rec<CR>
endif
let g:clang2_placeholder_next = ''
let g:clang2_placeholder_prev = ''
let g:spacevim_enable_vimfiler_gitstatus = 1
let g:airline_powerline_fonts = 1
let g:ycm_server_python_interpreter = '/usr/bin/python'
let g:ycm_server_python3_interpreter = '/usr/bin/python3'
let g:ycm_confirm_extra_conf = 1
let g:ycm_global_ycm_extra_conf = '~/.ycm_extra_conf.py'
let g:spacevim_automatic_update = 1
let g:spacevim_disabled_plugins = [
            \['lvht/phpcd.vim'],
            \['lvht/phpfold.vim'],
            \]
let g:spacevim_custom_plugins = [
            \['Valloric/YouCompleteMe'],
            \['ryanoasis/vim-devicons'],
            \]
" change the default character when no match found
let g:WebDevIconsUnicodeDecorateFileNodesDefaultSymbol = 'ƛ'
" set a byte character marker (BOM) utf-8 symbol when retrieving file encoding
" disabled by default with no value
let g:WebDevIconsUnicodeByteOrderMarkerDefaultSymbol = ''
" adding the column to vimfiler 
let g:webdevicons_enable_vimfiler = 1
" enable folder/directory glyph flag (disabled by default with 0)
let g:WebDevIconsUnicodeDecorateFolderNodes = 1
" change the default dictionary mappings for exact file node matches
let g:WebDevIconsUnicodeDecorateFileNodesExactSymbols = {} " needed
let g:WebDevIconsUnicodeDecorateFileNodesExactSymbols['MyReallyCoolFile.okay'] = 'ƛ'
